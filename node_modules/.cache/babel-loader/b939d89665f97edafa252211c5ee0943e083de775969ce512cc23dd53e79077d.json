{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciofilippi/Documents/test/test-leo/coding-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, createSearchParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'reactjs-popup/dist/index.css';\nimport { fetchMovies } from './data/moviesSlice';\nimport { ENDPOINT_SEARCH, ENDPOINT_DISCOVER, ENDPOINT, API_KEY } from './constants';\nimport Header from './components/Header';\nimport Movies from './components/Movies';\nimport Starred from './components/Starred';\nimport WatchLater from './components/WatchLater';\nimport ModalVideo from './components/ModalVideo';\nimport './app.scss';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const state = useSelector(state => state);\n  const {\n    movies\n  } = state;\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n  const [videoKey, setVideoKey] = useState();\n  const [isOpen, setOpen] = useState(false);\n  const navigate = useNavigate();\n  // let currentPage;\n  // const loaderEl = document.querySelector('.loader');\n  // console.log(loaderEl);\n\n  // window.addEventListener('scroll', () => {\n  //   const endOfPage =\n  //     window.innerHeight + window.pageYOffset + 5 >= document.body.offsetHeight;\n\n  //   if (endOfPage) {\n  //     showLoader();\n  //     getMovies(movies.page);\n  //     hideLoader();\n  //   }\n  // });\n\n  const closeModal = () => setOpen(false);\n\n  /**\n   * This function gets search results from an API\n   * It takes a string argument `query` and uses it\n   * to search the API.\n   * The response is an array of objects, with the\n   * following keys: title, url, and abstract\n   * */\n  const getSearchResults = query => {\n    if (query !== '') {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + query));\n      setSearchParams(createSearchParams({\n        search: query\n      }));\n    } else {\n      dispatch(fetchMovies(ENDPOINT_DISCOVER));\n      setSearchParams();\n    }\n  };\n  const searchMovies = query => {\n    navigate('/');\n    getSearchResults(query);\n  };\n\n  /**\n   * This function fetches a page of movies from the API, and\n   * returns the results in a Promise.\n   //\n   * Function parameters:\n   * - currentPage: The page number to fetch.\n   //\n   * Returns:\n   * - Promise of an array of movies.\n   */\n  const getMovies = page => {\n    if (searchQuery) {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + searchQuery));\n    } else if (page) {\n      console.log('page', page);\n      // const page = movies.page;\n      // console.log(movies.page);\n      // if (movies.page > page) {\n      dispatch(fetchMovies(`${ENDPOINT_DISCOVER}'&page=` + movies.page));\n      // }\n    } else {\n      dispatch(fetchMovies(ENDPOINT_DISCOVER));\n      // if (loaderEl) {\n      //   hideLoader();\n      // }\n    }\n  };\n\n  const viewTrailer = movie => {\n    getMovie(movie.id);\n    setOpen(true);\n  };\n\n  // /**\n  //  * Hides the loader.\n  //  */\n  // const hideLoader = () => {\n  //   loaderEl.classList.remove('show');\n  // };\n\n  // /**\n  //  * This function will add the class 'show' to the loaderEl element\n  //  */\n  // const showLoader = () => {\n  //   loaderEl.classList.add('show');\n  // };\n\n  /**\n   * This function is used to get a movie by ID.\n   * It takes a movie ID as a parameter.\n   * It returns a promise that resolves to the movie object.\n   */\n  const getMovie = async id => {\n    const URL = `${ENDPOINT}/movie/${id}?api_key=${API_KEY}&append_to_response=videos`;\n    setVideoKey(null);\n    const videoData = await fetch(URL).then(response => response.json());\n    if (videoData.videos && videoData.videos.results.length) {\n      const trailer = videoData.videos.results.find(vid => vid.type === 'Trailer');\n      setVideoKey(trailer ? trailer.key : videoData.videos.results[0].key);\n    }\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchMovies: searchMovies,\n      searchParams: searchParams,\n      setSearchParams: setSearchParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [isOpen && /*#__PURE__*/_jsxDEV(ModalVideo, {\n        videoKey: videoKey,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-container\",\n            children: movies.fetchStatus === 'success' && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n              dataLength: movies.results.length,\n              next: getMovies(movies === null || movies === void 0 ? void 0 : movies.page),\n              loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this),\n              endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Yay! You have seen it all\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Movies, {\n                movies: movies,\n                viewTrailer: viewTrailer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/starred\",\n          element: /*#__PURE__*/_jsxDEV(Starred, {\n            viewTrailer: viewTrailer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/watch-later\",\n          element: /*#__PURE__*/_jsxDEV(WatchLater, {\n            viewTrailer: viewTrailer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"not-found\",\n            children: \"Page Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"X5Nxoqi8FmgJDIkOVUv1/UxpCo8=\", false, function () {\n  return [useSelector, useDispatch, useSearchParams, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","createSearchParams","useSearchParams","useNavigate","useDispatch","useSelector","fetchMovies","ENDPOINT_SEARCH","ENDPOINT_DISCOVER","ENDPOINT","API_KEY","Header","Movies","Starred","WatchLater","ModalVideo","InfiniteScroll","App","state","movies","dispatch","searchParams","setSearchParams","searchQuery","get","videoKey","setVideoKey","isOpen","setOpen","navigate","closeModal","getSearchResults","query","search","searchMovies","getMovies","page","console","log","viewTrailer","movie","getMovie","id","URL","videoData","fetch","then","response","json","videos","results","length","trailer","find","vid","type","key","fetchStatus","textAlign"],"sources":["/Users/ignaciofilippi/Documents/test/test-leo/coding-assignment/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Routes,\n  Route,\n  createSearchParams,\n  useSearchParams,\n  useNavigate,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'reactjs-popup/dist/index.css';\nimport { fetchMovies } from './data/moviesSlice';\nimport {\n  ENDPOINT_SEARCH,\n  ENDPOINT_DISCOVER,\n  ENDPOINT,\n  API_KEY,\n} from './constants';\nimport Header from './components/Header';\nimport Movies from './components/Movies';\nimport Starred from './components/Starred';\nimport WatchLater from './components/WatchLater';\n\nimport ModalVideo from './components/ModalVideo';\nimport './app.scss';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst App = () => {\n  const state = useSelector((state) => state);\n  const { movies } = state;\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n  const [videoKey, setVideoKey] = useState();\n  const [isOpen, setOpen] = useState(false);\n  const navigate = useNavigate();\n  // let currentPage;\n  // const loaderEl = document.querySelector('.loader');\n  // console.log(loaderEl);\n\n  // window.addEventListener('scroll', () => {\n  //   const endOfPage =\n  //     window.innerHeight + window.pageYOffset + 5 >= document.body.offsetHeight;\n\n  //   if (endOfPage) {\n  //     showLoader();\n  //     getMovies(movies.page);\n  //     hideLoader();\n  //   }\n  // });\n\n  const closeModal = () => setOpen(false);\n\n  /**\n   * This function gets search results from an API\n   * It takes a string argument `query` and uses it\n   * to search the API.\n   * The response is an array of objects, with the\n   * following keys: title, url, and abstract\n   * */\n  const getSearchResults = (query) => {\n    if (query !== '') {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + query));\n      setSearchParams(createSearchParams({ search: query }));\n    } else {\n      dispatch(fetchMovies(ENDPOINT_DISCOVER));\n      setSearchParams();\n    }\n  };\n\n  const searchMovies = (query) => {\n    navigate('/');\n    getSearchResults(query);\n  };\n\n  /**\n   * This function fetches a page of movies from the API, and\n   * returns the results in a Promise.\n   //\n   * Function parameters:\n   * - currentPage: The page number to fetch.\n   //\n   * Returns:\n   * - Promise of an array of movies.\n   */\n  const getMovies = (page: number) => {\n    if (searchQuery) {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + searchQuery));\n    } else if (page) {\n      console.log('page', page);\n      // const page = movies.page;\n      // console.log(movies.page);\n      // if (movies.page > page) {\n      dispatch(fetchMovies(`${ENDPOINT_DISCOVER}'&page=` + movies.page));\n      // }\n    } else {\n      dispatch(fetchMovies(ENDPOINT_DISCOVER));\n      // if (loaderEl) {\n      //   hideLoader();\n      // }\n    }\n  };\n\n  const viewTrailer = (movie) => {\n    getMovie(movie.id);\n    setOpen(true);\n  };\n\n  // /**\n  //  * Hides the loader.\n  //  */\n  // const hideLoader = () => {\n  //   loaderEl.classList.remove('show');\n  // };\n\n  // /**\n  //  * This function will add the class 'show' to the loaderEl element\n  //  */\n  // const showLoader = () => {\n  //   loaderEl.classList.add('show');\n  // };\n\n  /**\n   * This function is used to get a movie by ID.\n   * It takes a movie ID as a parameter.\n   * It returns a promise that resolves to the movie object.\n   */\n  const getMovie = async (id) => {\n    const URL = `${ENDPOINT}/movie/${id}?api_key=${API_KEY}&append_to_response=videos`;\n\n    setVideoKey(null);\n    const videoData = await fetch(URL).then((response) => response.json());\n\n    if (videoData.videos && videoData.videos.results.length) {\n      const trailer = videoData.videos.results.find(\n        (vid) => vid.type === 'Trailer'\n      );\n      setVideoKey(trailer ? trailer.key : videoData.videos.results[0].key);\n    }\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header\n        searchMovies={searchMovies}\n        searchParams={searchParams}\n        setSearchParams={setSearchParams}\n      />\n\n      <div className=\"container\">\n        {isOpen && <ModalVideo videoKey={videoKey} closeModal={closeModal} />}\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"movies-container\">\n                {movies.fetchStatus === 'success' && (\n                  <InfiniteScroll\n                    dataLength={movies.results.length}\n                    next={getMovies(movies?.page)}\n                    loader={<h4>Loading...</h4>}\n                    endMessage={\n                      <p style={{ textAlign: 'center' }}>\n                        <b>Yay! You have seen it all</b>\n                      </p>\n                    }\n                  >\n                    <Movies movies={movies} viewTrailer={viewTrailer} />\n                  </InfiniteScroll>\n                )}\n\n                {/* <span id=\"loader\" className=\"loader\"></span> */}\n              </div>\n            }\n          />\n          <Route\n            path=\"/starred\"\n            element={<Starred viewTrailer={viewTrailer} />}\n          />\n          <Route\n            path=\"/watch-later\"\n            element={<WatchLater viewTrailer={viewTrailer} />}\n          />\n          <Route\n            path=\"*\"\n            element={<h1 className=\"not-found\">Page Not Found</h1>}\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}