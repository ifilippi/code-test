{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciofilippi/Documents/test/test-leo/coding-assignment/src/components/ModalVideo.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport YouTubePlayer from './YoutubePlayer';\nimport '../styles/modal-video.scss';\nimport React, { useRef, useEffect } from \"react\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useOutsideAlerter = ref => {\n  _s();\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    const handleClickOutside = event => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    };\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n};\n_s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nconst Movies = _ref => {\n  _s2();\n  let {\n    videoKey,\n    closeModal\n  } = _ref;\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    className: \"modal-video\",\n    \"data-testid\": \"modal-video\",\n    children: [/*#__PURE__*/_jsxDEV(YouTubePlayer, {\n      videoKey: videoKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-modal\",\n      onClick: closeModal,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n  // <div data-testid=\"movies\" className='custom-grid'>\n  //     {movies.movies.map((movie) => {\n  //         return (\n  //             <Movie\n  //                 movie={movie}\n  //                 key={movie.id}\n  //                 viewTrailer={viewTrailer}\n  //                 closeCard={closeCard}\n  //             />\n  //         )\n  //     })}\n  // </div>\n  ;\n};\n_s2(Movies, \"kF1gJ+9qozGrx9T2BaxcGZVoPDQ=\", false, function () {\n  return [useOutsideAlerter];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["YouTubePlayer","React","useRef","useEffect","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","alert","document","addEventListener","removeEventListener","Movies","videoKey","closeModal","wrapperRef"],"sources":["/Users/ignaciofilippi/Documents/test/test-leo/coding-assignment/src/components/ModalVideo.jsx"],"sourcesContent":["import YouTubePlayer from './YoutubePlayer';\nimport '../styles/modal-video.scss';\nimport React, { useRef, useEffect } from \"react\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nconst useOutsideAlerter = (ref) => {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nconst Movies = ({ videoKey, closeModal }) => {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  return (\n    <div ref={wrapperRef} className='modal-video' data-testid=\"modal-video\">\n      <YouTubePlayer videoKey={videoKey} />\n      <button className='close-modal' onClick={closeModal}>X</button>\n    </div>\n      // <div data-testid=\"movies\" className='custom-grid'>\n      //     {movies.movies.map((movie) => {\n      //         return (\n      //             <Movie\n      //                 movie={movie}\n      //                 key={movie.id}\n      //                 viewTrailer={viewTrailer}\n      //                 closeCard={closeCard}\n      //             />\n      //         )\n      //     })}\n      // </div>\n  )\n}\n\nexport default Movies\n"],"mappings":";;;AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAO,4BAA4B;AACnC,OAAOC,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEhD;AACA;AACA;AAFA;AAGA,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;EAAA;EACjCF,SAAS,CAAC,MAAM;IACd;AACJ;AACA;IACI,MAAMG,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIF,GAAG,CAACG,OAAO,IAAI,CAACH,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtDC,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC;IACD;IACAC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACX;MACAM,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAER,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACD,GAAG,CAAC,CAAC;AACX,CAAC;AAAA,GAjBKD,iBAAiB;AAmBvB,MAAMW,MAAM,GAAG,QAA8B;EAAA;EAAA,IAA7B;IAAEC,QAAQ;IAAEC;EAAW,CAAC;EACtC,MAAMC,UAAU,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC/BE,iBAAiB,CAACc,UAAU,CAAC;EAE7B,oBACE;IAAK,GAAG,EAAEA,UAAW;IAAC,SAAS,EAAC,aAAa;IAAC,eAAY,aAAa;IAAA,wBACrE,QAAC,aAAa;MAAC,QAAQ,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC;MAAQ,SAAS,EAAC,aAAa;MAAC,OAAO,EAAEC,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA;IAAA;IAAA;IAAA;EAAA;EAE/D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEN,CAAC;AAAA,IAtBKF,MAAM;EAAA,QAEVX,iBAAiB;AAAA;AAAA,KAFbW,MAAM;AAwBZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}