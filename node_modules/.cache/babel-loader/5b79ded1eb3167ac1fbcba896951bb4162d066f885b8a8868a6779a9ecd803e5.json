{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciofilippi/Documents/test/test-leo/coding-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, createSearchParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'reactjs-popup/dist/index.css';\nimport { fetchMovies } from './data/moviesSlice';\nimport { ENDPOINT_SEARCH, ENDPOINT_DISCOVER, ENDPOINT, API_KEY } from './constants';\nimport Header from './components/Header';\nimport Movies from './components/Movies';\nimport Starred from './components/Starred';\nimport WatchLater from './components/WatchLater';\nimport ModalVideo from './components/ModalVideo';\nimport './app.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const state = useSelector(state => state);\n  const {\n    movies\n  } = state;\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n  const [videoKey, setVideoKey] = useState();\n  const [isOpen, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  let loading = false;\n\n  // This function is used to fetch movies from the API based on a\n  // search query. If the query is empty, the function fetches all\n  // movies from the API.\n  const getSearchResults = query => {\n    if (query !== '') {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + query));\n      setSearchParams(createSearchParams({\n        search: query\n      }));\n    } else {\n      dispatch(fetchMovies(ENDPOINT_DISCOVER));\n      setSearchParams();\n    }\n  };\n\n  // This function is used to search for movies by query string\n  // query: the search term\n  const searchMovies = query => {\n    navigate('/');\n    getSearchResults(query);\n  };\n\n  // This function gets all movies from the database.\n  // It uses the database object, which is a global variable.\n  // This function is called by the server when the user navigates to /movies.\n  // It returns an array of movie objects.\n  const getMovies = () => {\n    if (searchQuery) {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + searchQuery));\n    } else {\n      if (!loading) {\n        loading = true;\n        dispatch(fetchMovies(ENDPOINT_DISCOVER));\n        setPage(page + 1);\n        setTimeout(() => {\n          loading = false;\n        }, 500);\n      }\n    }\n  };\n\n  // Get more movies from the API\n  // We are getting the next page of movies, so the page number is increased by 1\n  // The page number is passed in as an argument\n  const getMoreMovies = page => {\n    loading = true;\n    dispatch(fetchMovies(`${ENDPOINT_DISCOVER}'&page=` + page));\n    setTimeout(() => {\n      loading = false;\n    }, 500);\n  };\n\n  // This function takes a movie object and returns a function that takes a function\n  // as an argument. The function that is returned takes the function that was passed\n  // in as an argument and executes it.\n  const viewTrailer = movie => {\n    getMovie(movie.id);\n    document.getElementsByClassName('app')[0].classList.add('modal-open');\n    setOpen(true);\n  };\n\n  // This is a function that closes a modal\n  // The modal is used to display a popup with some information\n  // The function takes no parameters\n  // It sets the open state to false\n  const closeModal = () => {\n    setOpen(false);\n    document.getElementsByClassName('app')[0].classList.remove('modal-open');\n  };\n\n  // This function takes a movie ID and returns a promise containing the movie if it exists.\n  // The movie is retrieved from the database.\n  // If the movie does not exist, the promise will resolve to null.\n  const getMovie = async id => {\n    const URL = `${ENDPOINT}/movie/${id}?api_key=${API_KEY}&append_to_response=videos`;\n    setVideoKey(null);\n    const videoData = await fetch(URL).then(response => response.json());\n    if (videoData.videos && videoData.videos.results.length) {\n      const trailer = videoData.videos.results.find(vid => vid.type === 'Trailer');\n      setVideoKey(trailer ? trailer.key : videoData.videos.results[0].key);\n    }\n  };\n\n  // This function is called on scroll, and updates the\n  // scroll position in the store.\n  const onScroll = () => {\n    const scrollTop = document.documentElement.scrollTop;\n    const scrollHeight = document.documentElement.scrollHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (scrollTop + clientHeight + 1 >= scrollHeight) {\n      setPage(page + 1);\n      getMoreMovies(page);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [page]);\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchMovies: searchMovies,\n      searchParams: searchParams,\n      setSearchParams: setSearchParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [isOpen && /*#__PURE__*/_jsxDEV(ModalVideo, {\n        videoKey: videoKey,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-container\",\n            children: [/*#__PURE__*/_jsxDEV(Movies, {\n              movies: movies,\n              viewTrailer: viewTrailer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"loader\",\n              className: \"loader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/starred\",\n          element: /*#__PURE__*/_jsxDEV(Starred, {\n            viewTrailer: viewTrailer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/watch-later\",\n          element: /*#__PURE__*/_jsxDEV(WatchLater, {\n            viewTrailer: viewTrailer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"not-found\",\n            children: \"Page Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RINRZkMPfsNVfqBtP75rZEkWHqc=\", false, function () {\n  return [useSelector, useDispatch, useSearchParams, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","createSearchParams","useSearchParams","useNavigate","useDispatch","useSelector","fetchMovies","ENDPOINT_SEARCH","ENDPOINT_DISCOVER","ENDPOINT","API_KEY","Header","Movies","Starred","WatchLater","ModalVideo","App","state","movies","dispatch","searchParams","setSearchParams","searchQuery","get","videoKey","setVideoKey","isOpen","setOpen","navigate","page","setPage","loading","getSearchResults","query","search","searchMovies","getMovies","setTimeout","getMoreMovies","viewTrailer","movie","getMovie","id","document","getElementsByClassName","classList","add","closeModal","remove","URL","videoData","fetch","then","response","json","videos","results","length","trailer","find","vid","type","key","onScroll","scrollTop","documentElement","scrollHeight","clientHeight","window","addEventListener","removeEventListener"],"sources":["/Users/ignaciofilippi/Documents/test/test-leo/coding-assignment/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Routes,\n  Route,\n  createSearchParams,\n  useSearchParams,\n  useNavigate,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'reactjs-popup/dist/index.css';\nimport { fetchMovies } from './data/moviesSlice';\nimport {\n  ENDPOINT_SEARCH,\n  ENDPOINT_DISCOVER,\n  ENDPOINT,\n  API_KEY,\n} from './constants';\nimport Header from './components/Header';\nimport Movies from './components/Movies';\nimport Starred from './components/Starred';\nimport WatchLater from './components/WatchLater';\n\nimport ModalVideo from './components/ModalVideo';\nimport './app.scss';\n\nconst App = () => {\n  const state = useSelector((state) => state);\n  const { movies } = state;\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n  const [videoKey, setVideoKey] = useState();\n  const [isOpen, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  let loading = false;\n\n  // This function is used to fetch movies from the API based on a\n  // search query. If the query is empty, the function fetches all\n  // movies from the API.\n  const getSearchResults = (query) => {\n    if (query !== '') {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + query));\n      setSearchParams(createSearchParams({ search: query }));\n    } else {\n      dispatch(fetchMovies(ENDPOINT_DISCOVER));\n      setSearchParams();\n    }\n  };\n\n  // This function is used to search for movies by query string\n  // query: the search term\n  const searchMovies = (query) => {\n    navigate('/');\n    getSearchResults(query);\n  };\n\n  // This function gets all movies from the database.\n  // It uses the database object, which is a global variable.\n  // This function is called by the server when the user navigates to /movies.\n  // It returns an array of movie objects.\n  const getMovies = () => {\n    if (searchQuery) {\n      dispatch(fetchMovies(`${ENDPOINT_SEARCH}&query=` + searchQuery));\n    } else {\n      if (!loading) {\n        loading = true;\n        dispatch(fetchMovies(ENDPOINT_DISCOVER));\n        setPage(page + 1);\n        setTimeout(() => {\n          loading = false;\n        }, 500);\n      }\n    }\n  };\n\n  // Get more movies from the API\n  // We are getting the next page of movies, so the page number is increased by 1\n  // The page number is passed in as an argument\n  const getMoreMovies = (page: number) => {\n    loading = true;\n    dispatch(fetchMovies(`${ENDPOINT_DISCOVER}'&page=` + page));\n    setTimeout(() => {\n      loading = false;\n    }, 500);\n  };\n\n  // This function takes a movie object and returns a function that takes a function\n  // as an argument. The function that is returned takes the function that was passed\n  // in as an argument and executes it.\n  const viewTrailer = (movie) => {\n    getMovie(movie.id);\n    document.getElementsByClassName('app')[0].classList.add('modal-open');\n    setOpen(true);\n  };\n\n  // This is a function that closes a modal\n  // The modal is used to display a popup with some information\n  // The function takes no parameters\n  // It sets the open state to false\n  const closeModal = () => {\n    setOpen(false);\n    document.getElementsByClassName('app')[0].classList.remove('modal-open');\n  };\n\n  // This function takes a movie ID and returns a promise containing the movie if it exists.\n  // The movie is retrieved from the database.\n  // If the movie does not exist, the promise will resolve to null.\n  const getMovie = async (id) => {\n    const URL = `${ENDPOINT}/movie/${id}?api_key=${API_KEY}&append_to_response=videos`;\n\n    setVideoKey(null);\n    const videoData = await fetch(URL).then((response) => response.json());\n\n    if (videoData.videos && videoData.videos.results.length) {\n      const trailer = videoData.videos.results.find(\n        (vid) => vid.type === 'Trailer'\n      );\n      setVideoKey(trailer ? trailer.key : videoData.videos.results[0].key);\n    }\n  };\n\n  // This function is called on scroll, and updates the\n  // scroll position in the store.\n  const onScroll = () => {\n    const scrollTop = document.documentElement.scrollTop;\n    const scrollHeight = document.documentElement.scrollHeight;\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight + 1 >= scrollHeight) {\n      setPage(page + 1);\n      getMoreMovies(page);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [page]);\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header\n        searchMovies={searchMovies}\n        searchParams={searchParams}\n        setSearchParams={setSearchParams}\n      />\n\n      <div className=\"container\">\n        {isOpen && <ModalVideo videoKey={videoKey} closeModal={closeModal} />}\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"movies-container\">\n                <Movies movies={movies} viewTrailer={viewTrailer} />\n                {loading && <span id=\"loader\" className=\"loader\"></span>}\n              </div>\n            }\n          />\n          <Route\n            path=\"/starred\"\n            element={<Starred viewTrailer={viewTrailer} />}\n          />\n          <Route\n            path=\"/watch-later\"\n            element={<WatchLater viewTrailer={viewTrailer} />}\n          />\n          <Route\n            path=\"*\"\n            element={<h1 className=\"not-found\">Page Not Found</h1>}\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}